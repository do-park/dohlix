{"version":3,"sources":["assets/noPoster.jpg","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","area-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","Helmet","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","console","log","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a25b59ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPoster.c7579717.jpg\";","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n:not(:last-child) {\r\n  margin-bottom: 50px;\r\n}\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n  children: propTypes.oneOfType([\r\n    propTypes.arrayOf(propTypes.node),\r\n    propTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\n// eslint-disable-next-line\r\nexport default () => (\r\n  <Container>\r\n    <span role='img' area-label='loading'>\r\n      ✨\r\n    </span>\r\n  </Container>\r\n);\r\n\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: propTypes.string.isRequired,\r\n  color: propTypes.string.isRequired,\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 10px;\r\n  right: 10px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover{\r\n    ${Image}{\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating}{\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst Title = styled.span`\r\ndisplay: block;\r\nmargin - bottom: 1px;\r\n`;\r\n\r\nconst Year = styled.span`\r\nfont - size: 10px;\r\ncolor: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPoster.jpg\")\r\n          }\r\n        />\r\n        <Rating><span role='img' area-label='rating'>⭐</span>{\" \"}{rating}/10</Rating>\r\n      </ImageContainer>\r\n      <Title>{title.length > 18 ? `${title.substring(0, 15)}...` : title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: propTypes.number.isRequired,\r\n  imageUrl: propTypes.string,\r\n  title: propTypes.string.isRequired,\r\n  rating: propTypes.number,\r\n  year: propTypes.string,\r\n  isMovie: propTypes.bool,\r\n\r\n}\r\n\r\nexport default Poster;","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Section from 'Components/Section'\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n      <Container >\r\n        <Helmet>\r\n          <title>Movies | Dohlix</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 &&\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        }\r\n        {upcoming && upcoming.length > 0 &&\r\n          <Section title=\"Upcoming Movie\">\r\n            {upcoming.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        }\r\n        {popular && popular.length > 0 &&\r\n          <Section title=\"Popular Movie\">\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        }\r\n        {error && <Message color='#ff4d4d' text={error} />}\r\n      </Container >\r\n    )\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: propTypes.array,\r\n  popular: propTypes.array,\r\n  upcoming: propTypes.array,\r\n  loading: propTypes.bool.isRequired,\r\n  error: propTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"f94110cdc75b4785072b4b525f15fb53\",\r\n    language: \"en-US\"\r\n  }\r\n})\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id => api.get(`movie/${id}`, {\r\n    params: {\r\n      append_to_response: \"videos\"\r\n    }\r\n  }),\r\n  search: term => api.get(\"search/movie\", {\r\n    params: {\r\n      query: term\r\n    }\r\n  })\r\n}\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: id => api.get(`tv/${id}`, {\r\n    params: {\r\n      append_to_response: \"videos\"\r\n    }\r\n  }),\r\n  search: term => api.get(\"search/tv\", {\r\n    params: {\r\n      query: term\r\n    }\r\n  })\r\n}","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from 'react';\r\nimport HomePresenter from './HomePresenter';\r\nimport { moviesApi } from 'api';\r\n\r\n// eslint-disable-next-line\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const { data: { results: nowPlaying } } = await moviesApi.nowPlaying();\r\n      const { data: { results: upcoming } } = await moviesApi.upcoming();\r\n      const { data: { results: popular } } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      })\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movies information.\"\r\n      })\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>Shows | Dohlix</title>\r\n        </Helmet>\r\n        {topRated && topRated.length > 0 &&\r\n          (<Section title='Top Rated Shows'>\r\n            {topRated.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n          )}\r\n        {popular && popular.length > 0 &&\r\n          (<Section title='Popular Shows'>\r\n            {popular.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />))}\r\n          </Section>\r\n          )}\r\n        {airingToday && airingToday.length > 0 &&\r\n          (<Section title='Airing Today'>\r\n            {airingToday.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n          )}\r\n        {error && <Message color='#ff4d4d' text={error} />}\r\n      </Container>\r\n    );\r\n\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: propTypes.array,\r\n  popular: propTypes.array,\r\n  airingToday: propTypes.array,\r\n  loading: propTypes.bool.isRequired,\r\n  error: propTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from './TVContainer';\r\n\r\nexport default TVContainer;","import React from 'react';\r\nimport TVPresenter from './TVPresenter';\r\nimport { tvApi } from 'api';\r\n\r\n// eslint-disable-next-line\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const { data: { results: topRated } } = await tvApi.topRated();\r\n      const { data: { results: popular } } = await tvApi.popular();\r\n      const { data: { results: airingToday } } = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday })\r\n    }\r\n    catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\"\r\n\r\n      })\r\n    }\r\n    finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return <TVPresenter\r\n      topRated={topRated}\r\n      popular={popular}\r\n      airingToday={airingToday}\r\n      loading={loading}\r\n      error={error} />;\r\n  }\r\n}","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Loader from 'Components/Loader';\r\nimport Section from 'Components/Section';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  error,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => <Container>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input placeholder=\"Search Movie or TV Show\" value={searchTerm} onChange={updateTerm} />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Results\">\r\n              {movieResults.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV Show Results\">\r\n              {tvResults.map(show => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                  isMovie={false}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n        </>)}\r\n    {error && <Message color='#ff4d4d' text={error} />}\r\n    {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && <Message text='Nothing Found' color='#fffa65' />}\r\n  </Container >;\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: propTypes.array,\r\n  tvResults: propTypes.array,\r\n  loading: propTypes.bool.isRequired,\r\n  error: propTypes.string,\r\n  searchTerm: propTypes.string,\r\n  handleSubmit: propTypes.func.isRequired,\r\n  updateTerm: propTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;","import React from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\nimport { moviesApi, tvApi } from 'api';\r\n\r\n// eslint-disable-next-line\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: true,\r\n    error: null\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== '') {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const { target: { value } } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    })\r\n  }\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const { data: { results: movieResults } } = await moviesApi.search(searchTerm);\r\n      const { data: { results: tvResults } } = await tvApi.search(searchTerm);\r\n      this.setState({ movieResults, tvResults });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return <SearchPresenter\r\n      movieResults={movieResults}\r\n      tvResults={tvResults}\r\n      loading={loading}\r\n      error={error}\r\n      searchTerm={searchTerm}\r\n      handleSubmit={this.handleSubmit}\r\n      updateTerm={this.updateTerm} />;\r\n  }\r\n}","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Loader from 'Components/Loader';\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\nfont-size: 12px;\r\nopacity: 0.7;\r\nline-height: 1.5;\r\nwidth: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>{result.original_title ? result.original_title : result.original_name} | Dohlix</title>\r\n        </Helmet>\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n        <Content>\r\n          <Cover\r\n            bgImage={\r\n              result.poster_path\r\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                : require(\"../../assets/noPoster.jpg\")\r\n            }\r\n          />\r\n          <Data>\r\n            <Title>{result.original_title ? result.original_title : result.original_name}</Title>\r\n            <ItemContainer>\r\n              <Item>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}</Item>\r\n              <Divider>|</Divider>\r\n              <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\r\n              <Divider>|</Divider>\r\n              <Item>{result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n              </Item>\r\n            </ItemContainer>\r\n            <Overview>{result.overview ?? result.overview}</Overview>\r\n          </Data>\r\n        </Content>\r\n      </Container>\r\n    );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: propTypes.object,\r\n  loading: propTypes.bool.isRequired,\r\n  error: propTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from './DetailContainer';\r\n\r\nexport default DetailContainer;","import React from 'react';\r\nimport DetailPresenter from './DetailPresenter';\r\nimport { moviesApi, tvApi } from 'api';\r\n\r\n// eslint-disable-next-line\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { location: { pathname } } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push('/');\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    console.log(result)\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.80);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-top: 5px solid ${props => (props.current ? \"#ffb8b8\" : \"transparent\")};\r\n  transition: border-bottom .5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  width: 50px;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content:center;\r\n  margin: auto;\r\n`;\r\n\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === '/'}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === '/tv'}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === '/search'}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));","import React from \"react\";\r\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Header from \"Components/Header\"\r\n\r\n// eslint-disable-next-line\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from='*' to='/' />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n)","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst globalStyles = createGlobalStyle`\r\n  ${reset};\r\n  a{\r\n    text-decoration: none;\r\n    color:inherit;\r\n  }\r\n  *{\r\n    box-sizing:border-box;\r\n  }\r\n  body{\r\n    font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\r\n    font-size: 14px;\r\n    background-color: rgba(20, 20, 20, 1);\r\n    color: white;\r\n    padding-top: 50px;\r\n  }\r\n`;\r\n\r\nexport default globalStyles;","import React, { Component } from 'react';\r\nimport Router from \"Components/Router\"\r\nimport GlobalStyles from 'Components/GlobalStyles';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router />\r\n        <GlobalStyles />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'Components/App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}